@model DataAccessLayer.Model.Blog
@{
    ViewData["Title"] = "Create Blog";
}

<h1>Create your blog</h1>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="mb-3">
        <label asp-for="Name" class="form-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3">
    <label asp-for="Description" class="form-label"></label>
    <textarea asp-for="Description"
              class="form-control"
              rows="4"
              maxlength="1000"
              placeholder="Tell readers what this blog is about…"></textarea>
    <span asp-validation-for="Description" class="text-danger"></span>

    <!-- Live counter output -->
    <small id="descCounter" class="text-muted d-block mt-1"></small>
</div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="~/js/BlogCharacterCounter.js" asp-append-version="true"></script>
    <script>
        // Hook up the Description to BlogCharacterCounter and use the descCounter above
        CharacterCounterCounter.initByIds('Description', 'descCounter', 1000); // 1000 is the limit of chracters
    </script>
}
